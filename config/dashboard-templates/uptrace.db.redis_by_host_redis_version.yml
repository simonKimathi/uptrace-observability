schema: v2
name: 'DB: Redis'

table:
  metrics:
    - redis_commands as $cmds
    - redis_db_keys as $db_keys
    - redis_memory_rss as $rss
    - redis_memory_fragmentation_ratio as $fragmentation
    - redis_connections_rejected as $conns_rejected
  query:
    - group by host_name
    - group by redis_version
    - sum($cmds)
    - sum($rss)
    - sum($db_keys)
    - avg($fragmentation)
    - per_min(sum($conns_rejected)) as conns_rejected

grid_rows:
  - title: Gauges
    items:
      - title: Number of keys
        description: Number of keys in all Redis databases
        type: gauge
        metrics:
          - redis_db_keys as $keys
        query:
          - sum($keys)

      - title: Commands
        description: Number of processed commands
        type: gauge
        metrics:
          - redis_commands as $cmds
        query:
          - sum($cmds)

      - title: RAM fragm_
        description: RAM fragmentation ratio (RSS / allocated RAM)
        type: gauge
        metrics:
          - redis_memory_fragmentation_ratio as $mem_frag
        query:
          - avg($mem_frag) as mem_frag
        columns:
          mem_frag: { unit: utilization }

      - title: Ingress/min
        description: Incoming network traffic
        type: gauge
        metrics:
          - redis_net_input as $input
        query:
          - per_min(sum($input))

      - title: Egress/min
        description: Outgoing network traffic
        type: gauge
        metrics:
          - redis_net_output as $output
        query:
          - per_min(sum($output))

  - title: General
    items:
      - title: Fragmentation ratio
        metrics:
          - redis_memory_fragmentation_ratio as $fragmentation
        query:
          - avg($fragmentation)

      - title: Number of rejected connections
        metrics:
          - redis_connections_rejected as $conns_rejected
        query:
          - per_min(sum($conns_rejected)) as conns_rejected

      - title: Number of evicted keys
        metrics:
          - redis_keys_evicted as $keys_evicted
        query:
          - per_min(sum($keys_evicted)) as keys_evicted

      - title: Total number of keys and number of keys with a TTL
        metrics:
          - redis_db_keys as $db_keys
          - redis_db_expires as $db_expires
        query:
          - sum($db_keys)
          - sum($db_expires)
        chart: bar

      - title: Keyspace hit rate
        metrics:
          - redis_keyspace_hits as $hits
          - redis_keyspace_misses as $misses
        query:
          - per_min(sum($hits)) as hits
          - per_min(sum($misses)) as misses
          - hits / (hits + misses) as hit_rate
        columns:
          hit_rate: { unit: utilization }

      - title: Number of processed commands
        metrics:
          - redis_commands as $commands
        query:
          - sum($commands)

      - title: Biggest input and output client buffers
        metrics:
          - redis_clients_max_input_buffer as $input
          - redis_clients_max_output_buffer as $output
        query:
          - sum($input)
          - sum($output)

      - title: Number of bytes read and written from the network
        metrics:
          - redis_net_input as $input
          - redis_net_output as $output
        query:
          - per_min(sum($input)) as input_per_min
          - per_min(sum($output)) as output_per_min
        columns:
          input_per_min: { unit: bytes }
          output_per_min: { unit: bytes }
        chart: stacked-bar

      - title: RSS memory
        metrics:
          - redis_memory_rss as $rss
        query:
          - sum($rss) as rss
        columns:
          rss: { unit: bytes }
